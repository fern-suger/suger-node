/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { SugerApi } from "@fern-api/suger";
import * as core from "../../../../core";

export const ReportResponse: core.serialization.ObjectSchema<serializers.ReportResponse.Raw, SugerApi.ReportResponse> =
    core.serialization.object({
        header: core.serialization.lazy(async () => (await import("../../..")).Header).optional(),
        httpstatusCode: core.serialization.number().optional(),
        reportErrors: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).ReportError))
            .optional(),
        serviceConfigId: core.serialization.string().optional(),
        serviceRolloutId: core.serialization.string().optional(),
    });

export declare namespace ReportResponse {
    interface Raw {
        header?: serializers.Header.Raw | null;
        httpstatusCode?: number | null;
        reportErrors?: serializers.ReportError.Raw[] | null;
        serviceConfigId?: string | null;
        serviceRolloutId?: string | null;
    }
}
