/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { SugerApi } from "@fern-api/suger";
import * as core from "../../../../core";

export const AzureProductAvailability: core.serialization.ObjectSchema<
    serializers.AzureProductAvailability.Raw,
    SugerApi.AzureProductAvailability
> = core.serialization.object({
    emailAudiences: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).AzureAudience))
        .optional(),
    enterpriseLicensing: core.serialization.string().optional(),
    id: core.serialization.string().optional(),
    resourceType: core.serialization.string().optional(),
    subscriptionAudiences: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).AzureAudience))
        .optional(),
    visibility: core.serialization.string().optional(),
});

export declare namespace AzureProductAvailability {
    interface Raw {
        emailAudiences?: serializers.AzureAudience.Raw[] | null;
        enterpriseLicensing?: string | null;
        id?: string | null;
        resourceType?: string | null;
        subscriptionAudiences?: serializers.AzureAudience.Raw[] | null;
        visibility?: string | null;
    }
}
