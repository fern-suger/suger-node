/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { SugerApi } from "@fern-api/suger";
import * as core from "../../../../core";

export const OfferInfo: core.serialization.ObjectSchema<serializers.OfferInfo.Raw, SugerApi.OfferInfo> =
    core.serialization.object({
        azureProductVariant: core.serialization
            .lazyObject(async () => (await import("../../..")).AzureProductVariant)
            .optional(),
        baseAgreementId: core.serialization.string().optional(),
        buyerAwsAccountIds: core.serialization.list(core.serialization.string()).optional(),
        buyerAzureTenants: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).AzureAudience))
            .optional(),
        commits: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).CommitDimension))
            .optional(),
        currency: core.serialization.string().optional(),
        dimensions: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).MeteringDimension))
            .optional(),
        discount: core.serialization.number().optional(),
        eulaType: core.serialization.string().optional(),
        eulaUrl: core.serialization.string().optional(),
        gcpMetrics: core.serialization
            .list(
                core.serialization.lazyObject(async () => (await import("../../..")).GcpCommerceProducerPurchaseMetric)
            )
            .optional(),
        gcpPlans: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).GcpPurchasePlan))
            .optional(),
        isAgreementBasedOffer: core.serialization.boolean().optional(),
        paymentInstallments: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).PaymentInstallment))
            .optional(),
        refundCancelationPolicy: core.serialization.string().optional(),
        sellerNotes: core.serialization.string().optional(),
        visibility: core.serialization.string().optional(),
    });

export declare namespace OfferInfo {
    interface Raw {
        azureProductVariant?: serializers.AzureProductVariant.Raw | null;
        baseAgreementId?: string | null;
        buyerAwsAccountIds?: string[] | null;
        buyerAzureTenants?: serializers.AzureAudience.Raw[] | null;
        commits?: serializers.CommitDimension.Raw[] | null;
        currency?: string | null;
        dimensions?: serializers.MeteringDimension.Raw[] | null;
        discount?: number | null;
        eulaType?: string | null;
        eulaUrl?: string | null;
        gcpMetrics?: serializers.GcpCommerceProducerPurchaseMetric.Raw[] | null;
        gcpPlans?: serializers.GcpPurchasePlan.Raw[] | null;
        isAgreementBasedOffer?: boolean | null;
        paymentInstallments?: serializers.PaymentInstallment.Raw[] | null;
        refundCancelationPolicy?: string | null;
        sellerNotes?: string | null;
        visibility?: string | null;
    }
}
