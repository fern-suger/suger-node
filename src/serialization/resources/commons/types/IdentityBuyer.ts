/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { SugerApi } from "@fern-api/suger";
import * as core from "../../../../core";

export const IdentityBuyer: core.serialization.ObjectSchema<serializers.IdentityBuyer.Raw, SugerApi.IdentityBuyer> =
    core.serialization.object({
        creationTime: core.serialization.string().optional(),
        description: core.serialization.string().optional(),
        externalId: core.serialization.property("externalID", core.serialization.string().optional()),
        id: core.serialization.string().optional(),
        info: core.serialization.lazyObject(async () => (await import("../../..")).BuyerInfo).optional(),
        lastUpdateTime: core.serialization.string().optional(),
        name: core.serialization.string().optional(),
        organizationId: core.serialization.property("organizationID", core.serialization.string().optional()),
        partner: core.serialization.string().optional(),
    });

export declare namespace IdentityBuyer {
    interface Raw {
        creationTime?: string | null;
        description?: string | null;
        externalID?: string | null;
        id?: string | null;
        info?: serializers.BuyerInfo.Raw | null;
        lastUpdateTime?: string | null;
        name?: string | null;
        organizationID?: string | null;
        partner?: string | null;
    }
}
