/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { SugerApi } from "@fern-api/suger";
import * as core from "../../../../core";

export const CommitDimension: core.serialization.ObjectSchema<
    serializers.CommitDimension.Raw,
    SugerApi.CommitDimension
> = core.serialization.object({
    category: core.serialization.string().optional(),
    description: core.serialization.string().optional(),
    key: core.serialization.string().optional(),
    length: core.serialization.number().optional(),
    maximumUsers: core.serialization.number().optional(),
    minimumUsers: core.serialization.number().optional(),
    name: core.serialization.string().optional(),
    quantity: core.serialization.number().optional(),
    rate: core.serialization.number().optional(),
    timeUnit: core.serialization.string().optional(),
    type: core.serialization.string().optional(),
    types: core.serialization.list(core.serialization.string()).optional(),
});

export declare namespace CommitDimension {
    interface Raw {
        category?: string | null;
        description?: string | null;
        key?: string | null;
        length?: number | null;
        maximumUsers?: number | null;
        minimumUsers?: number | null;
        name?: string | null;
        quantity?: number | null;
        rate?: number | null;
        timeUnit?: string | null;
        type?: string | null;
        types?: string[] | null;
    }
}
