/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { SugerApi } from "@fern-api/suger";
import * as core from "../../../../core";

export const BatchMeterUsageOutput: core.serialization.ObjectSchema<
    serializers.BatchMeterUsageOutput.Raw,
    SugerApi.BatchMeterUsageOutput
> = core.serialization.object({
    resultMetadata: core.serialization.lazy(async () => (await import("../../..")).Metadata).optional(),
    results: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).UsageRecordResult))
        .optional(),
    unprocessedRecords: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).UsageRecord))
        .optional(),
});

export declare namespace BatchMeterUsageOutput {
    interface Raw {
        resultMetadata?: (serializers.Metadata.Raw | undefined) | null;
        results?: serializers.UsageRecordResult.Raw[] | null;
        unprocessedRecords?: serializers.UsageRecord.Raw[] | null;
    }
}
