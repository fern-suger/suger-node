/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { SugerApi } from "@fern-api/suger";
import * as core from "../../../../core";

export const BuyerInfo: core.serialization.ObjectSchema<serializers.BuyerInfo.Raw, SugerApi.BuyerInfo> =
    core.serialization.object({
        awsBuyer: core.serialization.lazyObject(async () => (await import("../../..")).AwsAccountIdentifier).optional(),
        azureBuyer: core.serialization.lazyObject(async () => (await import("../../..")).AzureAdIdentifier).optional(),
        collectableAmount: core.serialization.number().optional(),
        disbursedAmount: core.serialization.number().optional(),
        gcpBuyer: core.serialization
            .lazyObject(async () => (await import("../../..")).GcpMarketplaceUserAccount)
            .optional(),
        invoicedAmount: core.serialization.number().optional(),
    });

export declare namespace BuyerInfo {
    interface Raw {
        awsBuyer?: serializers.AwsAccountIdentifier.Raw | null;
        azureBuyer?: serializers.AzureAdIdentifier.Raw | null;
        collectableAmount?: number | null;
        disbursedAmount?: number | null;
        gcpBuyer?: serializers.GcpMarketplaceUserAccount.Raw | null;
        invoicedAmount?: number | null;
    }
}
