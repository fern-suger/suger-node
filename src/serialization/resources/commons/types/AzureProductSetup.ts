/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { SugerApi } from "@fern-api/suger";
import * as core from "../../../../core";

export const AzureProductSetup: core.serialization.ObjectSchema<
    serializers.AzureProductSetup.Raw,
    SugerApi.AzureProductSetup
> = core.serialization.object({
    callToAction: core.serialization.string().optional(),
    channelStates: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).TypeValue))
        .optional(),
    enableTestDrive: core.serialization.boolean().optional(),
    resourceType: core.serialization.string().optional(),
    sellingOption: core.serialization.string().optional(),
    testDriveType: core.serialization.string().optional(),
    trialUri: core.serialization.string().optional(),
});

export declare namespace AzureProductSetup {
    interface Raw {
        callToAction?: string | null;
        channelStates?: serializers.TypeValue.Raw[] | null;
        enableTestDrive?: boolean | null;
        resourceType?: string | null;
        sellingOption?: string | null;
        testDriveType?: string | null;
        trialUri?: string | null;
    }
}
