/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { SugerApi } from "@fern-api/suger";
import * as core from "../../../../core";

export const AzureProductFeatureAvailability: core.serialization.ObjectSchema<
    serializers.AzureProductFeatureAvailability.Raw,
    SugerApi.AzureProductFeatureAvailability
> = core.serialization.object({
    customMeters: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).AzureProductVariantCustomMeter))
        .optional(),
    id: core.serialization.string().optional(),
    isHidden: core.serialization.boolean().optional(),
    marketStates: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).AzureMarketState))
        .optional(),
    markets: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).AzureMarket))
        .optional(),
    priceSchedules: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).AzureProductVariantPriceSchedule))
        .optional(),
    properties: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).TypeValue))
        .optional(),
    resourceType: core.serialization.string().optional(),
    subscriptionAudiences: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).AzureAudience))
        .optional(),
    tenantAudiences: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).AzureAudience))
        .optional(),
    trial: core.serialization.lazyObject(async () => (await import("../../..")).AzureProductVariantTrial).optional(),
    visibility: core.serialization.string().optional(),
});

export declare namespace AzureProductFeatureAvailability {
    interface Raw {
        customMeters?: serializers.AzureProductVariantCustomMeter.Raw[] | null;
        id?: string | null;
        isHidden?: boolean | null;
        marketStates?: serializers.AzureMarketState.Raw[] | null;
        markets?: serializers.AzureMarket.Raw[] | null;
        priceSchedules?: serializers.AzureProductVariantPriceSchedule.Raw[] | null;
        properties?: serializers.TypeValue.Raw[] | null;
        resourceType?: string | null;
        subscriptionAudiences?: serializers.AzureAudience.Raw[] | null;
        tenantAudiences?: serializers.AzureAudience.Raw[] | null;
        trial?: serializers.AzureProductVariantTrial.Raw | null;
        visibility?: string | null;
    }
}
