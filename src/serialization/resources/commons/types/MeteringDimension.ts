/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { SugerApi } from "@fern-api/suger";
import * as core from "../../../../core";

export const MeteringDimension: core.serialization.ObjectSchema<
    serializers.MeteringDimension.Raw,
    SugerApi.MeteringDimension
> = core.serialization.object({
    category: core.serialization.string().optional(),
    description: core.serialization.string().optional(),
    includedBaseQuantities: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).IncludedBaseQuantity))
        .optional(),
    key: core.serialization.string().optional(),
    name: core.serialization.string().optional(),
    rate: core.serialization.number().optional(),
    types: core.serialization.list(core.serialization.string()).optional(),
    usageCount: core.serialization.lazyObject(async () => (await import("../../..")).UsageCount).optional(),
    valueType: core.serialization.string().optional(),
});

export declare namespace MeteringDimension {
    interface Raw {
        category?: string | null;
        description?: string | null;
        includedBaseQuantities?: serializers.IncludedBaseQuantity.Raw[] | null;
        key?: string | null;
        name?: string | null;
        rate?: number | null;
        types?: string[] | null;
        usageCount?: serializers.UsageCount.Raw | null;
        valueType?: string | null;
    }
}
