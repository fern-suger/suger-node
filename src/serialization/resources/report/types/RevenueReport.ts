/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { SugerApi } from "@fern-api/suger";
import * as core from "../../../../core";

export const RevenueReport: core.serialization.ObjectSchema<serializers.RevenueReport.Raw, SugerApi.RevenueReport> =
    core.serialization.object({
        buyerId: core.serialization.property("buyerID", core.serialization.string().optional()),
        entitlementId: core.serialization.property("entitlementID", core.serialization.string().optional()),
        organizationId: core.serialization.property("organizationID", core.serialization.string().optional()),
        partner: core.serialization.string().optional(),
        productId: core.serialization.property("productID", core.serialization.string().optional()),
        reportDate: core.serialization.string().optional(),
        reportType: core.serialization.string().optional(),
        revenueRecords: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).RevenueRecord))
            .optional(),
        service: core.serialization.string().optional(),
    });

export declare namespace RevenueReport {
    interface Raw {
        buyerID?: string | null;
        entitlementID?: string | null;
        organizationID?: string | null;
        partner?: string | null;
        productID?: string | null;
        reportDate?: string | null;
        reportType?: string | null;
        revenueRecords?: serializers.RevenueRecord.Raw[] | null;
        service?: string | null;
    }
}
