/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { SugerApi } from "@fern-api/suger";
import * as core from "../../../../core";

export const CreateOfferParams: core.serialization.ObjectSchema<
    serializers.CreateOfferParams.Raw,
    SugerApi.CreateOfferParams
> = core.serialization.object({
    creationTime: core.serialization.string().optional(),
    endTime: core.serialization.string().optional(),
    expireTime: core.serialization.string().optional(),
    externalId: core.serialization.property("externalID", core.serialization.string().optional()),
    id: core.serialization.string().optional(),
    info: core.serialization.lazyObject(async () => (await import("../../..")).OfferInfo),
    name: core.serialization.string(),
    offerType: core.serialization.string().optional(),
    organizationId: core.serialization.property("organizationID", core.serialization.string()),
    partner: core.serialization.string(),
    productId: core.serialization.property("productID", core.serialization.string()),
    service: core.serialization.string(),
    status: core.serialization.string().optional(),
});

export declare namespace CreateOfferParams {
    interface Raw {
        creationTime?: string | null;
        endTime?: string | null;
        expireTime?: string | null;
        externalID?: string | null;
        id?: string | null;
        info: serializers.OfferInfo.Raw;
        name: string;
        offerType?: string | null;
        organizationID: string;
        partner: string;
        productID: string;
        service: string;
        status?: string | null;
    }
}
